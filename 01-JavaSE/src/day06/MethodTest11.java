package day06;
/*
	方法在执行过程中，在jvm的内存是如何分配的呢，内存是如何变化的？
		1、方法只定义，不使用，是不会执行的，并且在jvm中也不会给该方法分配“运行所属”的内存空间
			 只有在调用这个方法的时候，才会动态的给这个方法分配所属的内存空间。
		2、在jvm内存划分上有这样三种内存空间（当然除了这三块之外还有其他的内存空间）
			* 方法区内存
			* 堆内存
			* 栈内存
		3、关于栈数据结构：
			* 栈：stack, 是一种数据结构
			* 数据结构反应的是数据结构的存储形态。
			* 数据结构是独立的学科，不属于任何编程语言范畴	，只不过大多数编程语言当中要使用数据结构。
			* 作为程序员需要提前精通 【数据结构+算法】
			* java程序员在不精通数据结构和算法的前提下，也可能进行java开发，因为java有一套庞大的类库支撑。
			* 常见的数据结构：
				- 数组
				- 队列
				- 栈
				- 链表
				- 二叉树
				- 哈希表/数表列
		4、方法执行的时候代码片段存在哪里，方法执行的时候，执行过程的内存在哪里分配？
			* 方法代码片段：属于.class字节码文件的一部分，字节码文件在类加载的时候，
				将其放到了方法去当中。所以在jvm中，三块主要内存空间中方法去最先有数据，存放了代码片段
			* 代码片段虽然在方法区内存中只有一份，但是也可以被重复调用。
				每次调用这个方法的时候，需要给该方法分配独立的活动场所，在栈内存中分配。【栈内存中分配方法所属内存空间】
	  5、方法在调用的瞬间，会给该方法分配内存空间，会在栈中发生压栈动作。
	  	 方法执行结束之后，给该方法分配的内存空间全部释放，此时发生弹栈动作。
	  	 	* 压栈：给方法分配内存
	  	 	* 弹栈：释放该方法的内存空间
	  6、局部变量在“方法体”中声明，局部变量运行阶段在栈中分配。
 */
public class MethodTest11 {
}
